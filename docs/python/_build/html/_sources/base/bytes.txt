bytes - неизменяемая последовательность байтов
==============================================


.. py:class:: bytes

    Неизменяемая последовательность байтов. Каждый элемент последовательно­сти может хранить целое число от 0 до 255, которое обозначает код символа. Объект ти­па `bytes` поддерживает большинство строковых методов и, если это возможно, выводит­ся как последовательность символов. Однако доступ по индексу возвращает целое чис­ло, а не символ.

    >>> type(bytes("Cтpoкa", "utf-8"))
    <class 'bytes'>

    >>> s = bytes("cтp str", "ср1251")
    >>> s[O], s[5], s[О:З], s[4:7]
    (241, 116, b'\xf1\xf2\xf0', b'str')
    >>> s
    b'\xf1\xf2\xf0 str'

    >>> len ("строка")
    6
    >>> len(bytes ("строка", "ср1251"))
    6
    >>> len(bytes("cтpoкa", "utf-8"))
    12


Функции работы с :py:class:`bytes`
----------------------------------

.. py:function:: bytes (obj [, encoding, errors='strict']) -
    
    :param obj: объект (:py:class:`str`, :py:class:`list`,  :py:class:`tuple`)
    :param str encoding: кодировка для :py:class:`str`
    :param str errors: обработка ошибок для :py:class:`str`

    возвращает :py:class:`bytes`, преобразованный из объекта. для последовательностей, если число не попадает в диапазон 0...255, то возбуждается исклю­чение Va1ueError

    Через атрибут `errors` настраивается обработка ошибок:

        * `strict` - при ошибке возбуждается исключение :py:class:`UnicodeDecodeError`
        * `replace` - неизвестный символ заменяется символом, имеющим код \uFFFD
        * `ignore` - неизвестные символы игнорируются

    >>> bуtеs("строка", "ср1251")
    b'\xf1\xf2\xf0\xee\xea\xe0'
    
    >>> bуtеs("строка123", "ascii", "ignore")
    b'123'
    
    >>> b = bytes([225, 226, 224, 174, 170, 160])
    b'\хе1\хе2\хе0\хае\хаа\ха0'
    
    >>> str(b, "ср866")
    'строка'    

    .. decode([encoding='utf-8'][, errors='strict'])

        возвращает строку