Классы
======

::
    
    public class Main{


        static{
            // инициализация статических переменных класса
            for (int k: a) a[k] = k * k;
        }

        {
            // инициализация переменных экземпляра класса
        }

        // входная точка приложения
        public static void main(String[] args) throws IOException{
            System.out.println("Hello, XXI Сentury World!");
        }



    }

.. py:class:: Object

    базовый класс для всех классов


    .. py:method:: equals(obj)

        сравнивате экземпляр с переданным объектом


    .. py:method:: hashCode()

        возвращает идентификатор объекта


    .. py:method:: toString()

        возвращает строковое представление объекта


.. py:class:: Class


    .. py:method:: getClass()

        возвращает класс объекта


    .. py:staticmethod:: forName(String className)

        возвращает экземпляр класса

        ::

            Class c1 = Class.forName("java.lang.String");


    .. py:method:: isAnnotation()
    .. py:method:: isArray()
    .. py:method:: isInterface()
    .. py:method:: isEnum()
    .. py:method:: isPrimitive()
    .. py:method:: getDeclaredClasses()
    .. py:method:: getDeclaredConstructors()
    .. py:method:: getDeclaredMethods()
    .. py:method:: getDeclaredFields()
    .. py:method:: getSuperclass()
    .. py:method:: getPackage()
    .. py:method:: getModifiers()

Модификаторы класса
===================

.. _modif_access:

Модификаторы класса
-------------------

* `public` - класс доступен снаружи
* `abstract` - абстрактный класс, экземпляр которого не создать
* `final` - не изменяемый класс, т.е. его нельзя отнаследовать
* `strictfp`
* `protected`
* `private` - класс не доступен снаружи
* `static` - статичный класс

Модификаторы полей класса
-------------------------

* `public` - поле доступно снаружи
* `protected` 
* `private` - поле не доступно снаружи
* `static` - статическое поле
* `final` - не изменяемое поле, константа класса, которая определяется в самом классе или в конструкторе 
* `transient`
* `volatile`

Модификаторы методов класса
---------------------------

* `public` - метод доступен снаружи
* `protected`
* `private` - метод не доступен снаружи
* `abstract` - абстрактный метод, классы с асбтрактынми методами являются абстрактными
* `static` - статический метод
* `final` - не изменяемый метод, т.е. его нельзя переопределить в подклассах
* `synchronized`
* `native`
* `strictfp`

Если модификаторы не заданы, то по умолчанию, доступ есть только внутри пакета.